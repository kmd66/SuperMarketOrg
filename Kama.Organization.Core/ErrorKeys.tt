<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="EnvDTE" #>  
<#@ import namespace="EnvDTE" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Collections.Generic" #>
namespace Kama.Organization.Core.ErrorKey
{
<#
var serviceProvider = this.Host as IServiceProvider;
var dte = serviceProvider.GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE;
var slnDir = System.IO.Path.GetDirectoryName(dte.Solution.FullName);

var filename = slnDir + @"\Kama.Organization.API\App_Data\ErrorCode.xml";
var xmlDoc = new XmlDocument();
xmlDoc.Load(filename);

var errorDomains = xmlDoc.DocumentElement.ChildNodes.OfType<XmlElement>().OrderBy(e => e.Name);

foreach (var errorDomain in errorDomains)
{
     var errorActions = errorDomain.ChildNodes.OfType<XmlElement>()
                                 .Where(e => e.Name.Equals("Action", StringComparison.OrdinalIgnoreCase))
								 .OrderBy(e => e.Attributes["name"]?.Value);
#>
	namespace <#=errorDomain.Name#>
	{
<#foreach (var errorAction in errorActions){
   var actionName = errorAction.Attributes["name"]?.Value;
   var actionKey = $"{errorDomain.Name}_{actionName}".ToLower();

   var errors = errorAction.ChildNodes.OfType<XmlElement>()
                                 .Where(e => e.Name.Equals("error", StringComparison.OrdinalIgnoreCase));
#>
		public class <#=actionName#>
		{
			public const string ActionKey = "<#=actionKey#>";
<#foreach (var errorElement in errors){
	var errorKey = errorElement.Attributes["key"]?.Value;
	var errorCode = errorElement.Attributes["code"]?.Value;
	var errorMessage = errorElement.InnerText;
#>
			
			/// <summary>
            /// <#=errorMessage#>
            /// </summary>
			public const string <#=errorKey#> = "<#=actionKey + ":" + errorCode#>";

			/// <summary>
            /// <#=errorMessage#>
            /// </summary>
			public const int <#=errorKey#>_Code = <#=errorCode#>;
<#}#>
		}
<#}#>
	}
<#}#>
}